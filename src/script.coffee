# function inserting the status into the DOM
insertStatus = (el, status) ->
  switch status.state
    when 'success'
      color = '#6cc644'
    when 'failure'
      color =  '#bd2c00'
    when 'pending'
      color =  '#ff9933'
    else
      return
  # Add relevant rules to the stylesheet.
  document.styleSheets[0].insertRule("#github-status-extension{margin: 7px; display: inline-block; width: 9px; height: 9px; border-radius: 50%; background-color: #{color}}", 1)

  # Create the link element.
  link       = window.document.createElement('a');
  link.href  = status.target_url || '#'
  link.title = status.description || status.state
  link.id    = 'github-status-extension'

  # And finally insert the elements into the DOM.
  el.appendChild link

###
We first check whether the required elements exist on the webpage. If they
do not, it means that either the user is looking at something other than
a project page, or that github changed their layout and we need to adapt
this code. Either way, this ensures that no errors are generated by this
extension due to missing DOM elements.
###
el = window.document.querySelector '.title-actions-bar h1 strong'
# detect private repos (currently unsupported)
privateRepo = window.document.querySelector '.entry-title.private'
if el and not privateRepo
  # Extracting the repo owner and repo name from the pathname
  project = window.location.pathname.split('/').splice 1,3
  # Getting latest commit hash
  shaRequest = new XMLHttpRequest
  shaRequest.open('GET', "https://api.github.com/repos/#{project[0]}/#{project[1]}/commits", true);
  shaRequest.onreadystatechange = ->
    if shaRequest.readyState == 4
      sha = JSON.parse(shaRequest.responseText)[0]?.sha
      # Getting latest status
      if !sha then return
      statusRequest = new XMLHttpRequest
      statusRequest.open('GET', "https://api.github.com/repos/#{project[0]}/#{project[1]}/statuses/#{sha}", true);
      statusRequest.onreadystatechange = ->
        if statusRequest.readyState == 4
          status = JSON.parse(statusRequest.responseText)[0]
          # Finally insert the status into the DOM
          if status? then insertStatus el, status
      try
        statusRequest.send null
      catch e
        # Request could fail due to rate limit
        # just keeping the endusers console clean
        (->)()

  try
    shaRequest.send null
  catch e
    # Request could fail due to rate limit
    # just keeping the endusers console clean
    (->)()
